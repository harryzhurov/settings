# Syntax rules for the C and the C++ programming languages

context default
    keyword whole auto white
    keyword whole break white
    keyword whole case white
    keyword whole char white
    keyword whole const white
    keyword whole continue white
    keyword whole do white
    keyword whole double white
    keyword whole else white
    keyword whole enum white
    keyword whole extern white
    keyword whole float white
    keyword whole for white
    keyword whole goto white
    keyword whole if white
    keyword whole int white
    keyword whole long white
    keyword whole register white
    keyword whole return white
    keyword whole short white
    keyword whole signed white
    keyword whole sizeof white
    keyword whole static white
    keyword whole struct white
    keyword whole switch white
    keyword whole typedef white
    keyword whole union white
    keyword whole unsigned white
    keyword whole void white
    keyword whole volatile white
    keyword whole while white
    keyword whole asm white
    keyword whole inline white
    keyword whole wchar_t white
    keyword whole ... white
    keyword whole linestart \{\s\t\}\[\s\t\]#*\n brightmagenta
    keyword whole \[\s\t\]default white
    keyword whole linestart \[\s\t\]\{ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\}\[0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz\]: cyan

    keyword /\* brown
    keyword \*/ brown
    keyword // brown

    keyword '\\\{"abtnvfr\}' brightgreen
    keyword '\\\{0123\}\{01234567\}\{01234567\}' brightgreen
    keyword '\\'' brightgreen
    keyword '\\\\' brightgreen
    keyword '\\0' brightgreen
    keyword '\{\s!"#$%&()\*\+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[]^_`abcdefghijklmnopqrstuvwxyz{|}~ ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ\}' brightgreen

# punctuation characters, sorted by ASCII code
    keyword ! brightcyan
    keyword % brightcyan
    keyword && brightcyan
    keyword & brightcyan
    keyword ( brightcyan
    keyword ) brightcyan
    keyword \* brightcyan
    keyword \+ brightcyan
    keyword , brightcyan
    keyword - brightcyan
    keyword / brightcyan
    keyword : brightcyan
    keyword ; brightcyan
    keyword < brightcyan
    keyword = brightcyan
    keyword > brightcyan
    keyword ? brightcyan
    keyword [ brightcyan
    keyword ] brightcyan
    keyword ^ brightcyan
    keyword { brightcyan
    keyword || brightcyan
    keyword | brightcyan
    keyword } brightcyan
    keyword ~ brightcyan

context exclusive /\* \*/ brown
    spellcheck

context exclusive // \n brown
    spellcheck

context linestart # \n brightgreen
    keyword \\\n white
    keyword /\**\*/ brown
    keyword //*\n brown
    keyword "+" green
    keyword <+> green

context " " green
    spellcheck
    keyword \\" brightgreen
    keyword %% brightgreen
    keyword %\[#0\s-\+,\]\[0123456789\*\]\[.\]\[0123456789\*\]\[L\]\{eEfgGoxX\} brightgreen
    keyword %\[0\s-\+,\]\[0123456789\*\]\[.\]\[0123456789\*\]\[hl\]\{diuxX\} brightgreen
    keyword %\[hl\]n brightgreen
    keyword %\[-\]\[0123456789\*\]\[.\]\[0123456789\*\]s brightgreen
    keyword %[*] brightgreen
    keyword %c brightgreen
    keyword %p brightgreen
    keyword \\\{0123\}\{01234567\}\{01234567\} brightgreen
    keyword \\\\ brightgreen
    keyword \\' brightgreen
    keyword \\\{abtnvfr\} brightgreen
